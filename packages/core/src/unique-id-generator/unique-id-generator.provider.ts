/**
 * @author Shezad Khan
 * @description A factory function that will be provided by the Injection token to generate a unique id. This function will be incremented by a unit of 1 with th each instance of the component created in the DOM. 
 * @example 
 * A developer should have a InjectionToken which is to be provided in the component.
 * ```
 *  export const MY_ID_GENERATOR = new InjectionToken<string>('ID_GENERATOR_STRING');
 * ```
 * Use the InjectionToken in the providers array of the module providing it with the factory function defined in this file.
 * ```
 *  providers: [
        {
            provide: MY_ID_GENERATOR,
            useFactory: () => uniqueIdProvider
        }
    ]
 * ```
 * Inject the factory function in the component's constructor as shown below:
 * ```
 * constructor(@Optional() @Inject(MY_ID_GENERATOR) private myUniqueId: () => {}) {
 * this.id = `cmn-id-${this.customUniqueId()}`
 * }
 * ```
 * **Note: ** `@Optional()` will make this token to be overrided by any @Input() property if necessary to replace it with the id generated by the factory function.
 */

let uniqueId = 0;

export const uniqueIdProvider = () => uniqueId++;
